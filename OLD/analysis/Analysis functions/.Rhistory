library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
ej<-read.delim("clipboard")
ej %>% gather(key = "SEGURO",SH11A,SH11B,SH11C)
ej %>% gather(SH11A,SH11B,SH11C,key = "SEGURO")
ej %>% gather("SH11A","SH11B","SH11C",key = "SEGURO",value = "CONTEO")
ej<-read.delim("clipboard")
ej
KNOW_TRANSMIT_MOTHER_TO_DS = (SH11A+SH11B+SH11C)
KNOW_TRANSMIT_MOTHER_TO_DS = (ej$SH11A+ej$SH11B+ej$SH11C)
KNOW_TRANSMIT_MOTHER_TO_DS
ej %>% mutate(KNOW_TRANSMIT_MOTHER_TO_DS = ej$SH11A+ej$SH11B+ej$SH11C, KNOW_TRANSMIT_MOTHER_TO_DS=case_when(KNOW_ETS==0~"NO",
ej %>% mutate(KNOW_TRANSMIT_MOTHER_TO_DS = ej$SH11A+ej$SH11B+ej$SH11C, KNOW_TRANSMIT_MOTHER_TO_DS=case_when(KNOW_ETS==0~"NO",
KNOW_ETS>=1~"YES"))
ej
ej %>% mutate(KNOW_TRANSMIT_MOTHER_TO_DS = ej$SH11A+ej$SH11B+ej$SH11C, KNOW_TRANSMIT_MOTHER_TO_DS=case_when(
KNOW_TRANSMIT_MOTHER_TO_DS==0~"NO",
KNOW_TRANSMIT_MOTHER_TO_DS>=1~"YES"))
library(tidyverse)
ej<-read.delim("clipboard")
ej
ej %>% mutate( PRENATAL_CARE_ATTENTION = case_when((M2A|M2B|M2C|M2D)==1 ~ "PROFESSIONAL_OR_TECHNICAL",
(M2E|M2F|M2G|M2H|M2I|M2J|M2K|M2L|M2M)==1 ~ "OTHER",
M2N==1 ~ "NOBODY"))
ej<-read.delim("clipboard")
ej
ej %>% mutate( PRENATAL_CARE_ATTENTION = case_when((M2A|M2B|M2C|M2D)==1 ~ "PROFESSIONAL_OR_TECHNICAL",
(M2E|M2F|M2G|M2H|M2I|M2J|M2K|M2L|M2M)==1 ~ "OTHER",
M2N==1 ~ "NOBODY"))
install.packages("tidymodels")
install.packages("installr", dependencies = TRUE)
library(installr)
updateR()
install.packages("doParallel")
library(doParallel)
no_cores <- detectCores() - 1
no_cores
cl <- makeCluster(no_cores)
registerDoParallel(cl)
doParallel::registerDoParallel()
set.seed(123)
rf_res <- tune_grid(
rf_wf,
resamples = rf_folds,
grid = 20
)
library(doParallel)
no_cores <- detectCores() - 1
cl<- makeCluster(no_cores)
registerDoParallel(cl)
detach("package:doParallel", unload = TRUE)
detach("package:parallel", unload = TRUE)
library(doParallel)
no_cores <- detectCores() - 1
cl<- makeCluster(no_cores)
detach("package:doParallel", unload = TRUE)
detach("package:parallel", unload = TRUE)
install.packages("doParallel")
library(doParallel)
no_cores <- detectCores() - 1
cl<- makeCluster(no_cores)
cl
detach("package:doParallel", unload = TRUE)
no_cores <- detectCores() - 1
cl<- makeCluster(no_cores)
cl
install.packages("doParallel")
no_cores <- detectCores() - 1
cl<- makeCluster(no_cores)
library(doParallel)
no_cores <- detectCores() - 1
cl<- makeCluster(no_cores)
registerDoParallel(cl)
registerDoParallel(7)
install.packages("doParallel")
library(doParallel)
no_cores <- detectCores() - 1
cl<- makeCluster(no_cores)
