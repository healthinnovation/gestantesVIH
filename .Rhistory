dataset_wo_names <- read_csv(
path_dataset_wo_names_file, col_types = cols(.default = "c")
)
# Set variable names ------------------------------------------------------
nrow_variable_names <- nrow(variable_names)
dataset <- dataset_wo_names
for (row in 1:nrow_variable_names) {
variable_name <- variable_names$variable[row]
new_variable_name <- variable_names$variable_name[row]
colnames(dataset)[colnames(dataset) == variable_name] <- new_variable_name
}
colnames(dataset) <- tolower(colnames(dataset))
# Get values for all variables --------------------------------------------
variables_to_filter_for_pivot <- c(
"caseid", "wealth_index_scoring_factor", "weighting_factor", "year",
"total_children_ever_born", "sons_who_have_died", "daughters_who_have_died",
"births_last_five_years", "births_past_year", "births_month_interview",
"date_first_birth", "age_respondent_first_birth", "duration_current_pregnancy",
"no_living_children", "living_children_current_pregnancy",
"marriage_fisrt_birth_interval", "last_birth_interview_interval", "age",
"no_household_members", "no_children_6_yo",
"no_eligible_women_15_to_49_yo", "age_household_head", "age_household_member",
"mother_line_no", "father_line_no", "single_years_edu_partner",
"no_sex_partners_other_partner_last_12_months",
"no_sex_partners_including_partner_last_12_months",
"years_lived_place_residence", "age_first_sexual_partner",
"total_lifetime_sex_partners_last_12_months", "highest_year_edu_woman",
"time_get_primary_source_drinking_water", "highest_year_edu",
"edu_single_years", "grade_edu_current_year",
"edu_single_years_current_year", "grade_edu_previous_year",
"edu_single_years_previous_year", "length_time_knows_last_partner"
)
dataset %>%
select(-all_of(variables_to_filter_for_pivot)) %>%
pivot_longer(
cols = everything(),
names_to = "variable_name",
values_to = "value"
) %>%
group_by(variable_name) %>%
summarise(value = sort(unique(value)), .groups = "drop") %>%
left_join(variable_names, by = "variable_name") %>%
select(survey, variable, variable_name, value) %>%
arrange(survey, variable, value) ->
values_per_variable
variable_values_file <- "variable-values.csv"
path_variable_values_file <- path(path_variables_dir, variable_values_file)
variable_values <- read_csv(path_variable_values_file)
values_per_variable %>%
anti_join(
variable_values, by = c("survey", "variable", "variable_name", "value")
) ->
variable_values_to_fill
variable_values_to_fill$value_description <- rep(NA, nrow(variable_values_to_fill))
values_per_variable
variable_values
variable_values_file <- "variable-values.csv"
path_variable_values_file <- path(path_variables_dir, variable_values_file)
variable_values <- read_csv(path_variable_values_file,col_types = cols(.default = "c"))
values_per_variable %>%
anti_join(
variable_values, by = c("survey", "variable", "variable_name", "value")
) ->
variable_values_to_fill
variable_values_to_fill$value_description <- rep(NA, nrow(variable_values_to_fill))
variables_out_path <- path("data", "variables", "raw")
output_file_name <- "variable-values-to-fill.csv"
output_file_path <- path(variables_out_path, output_file_name)
write_csv(variable_values_to_fill, output_file_path, na = "")
data_out_path <- path("data", "interim")
data_out_file_name <- "dataset-without-values.csv"
data_out_file_path <- path(data_out_path, data_out_file_name)
write_csv(dataset, data_out_file_path, na = "")
library(fs)
library(haven)
library(purrr)
library(dplyr)
library(data.table)
library(readr)
library(stringi)
library(tidyr)
variables_path <- path("data", "variables")
variables_file <- "variables.csv"
variables_file_path <- path(variables_path, variables_file)
variables_dtfr <- read_csv(variables_file_path)
raw_path <- path("data", "raw")
endes_path <- path(raw_path, "endes")
endes_files <- dir_ls(endes_path, recurse = T, glob = "*.sav")
pattern <- paste(endes_surveys, collapse = "|")
endes_files <- endes_files[grepl(pattern, endes_files)]
surveys_raw <- map(endes_files, read_sav)
endes_surveys <- unique(variables_dtfr$survey)
raw_path <- path("data", "raw")
endes_path <- path(raw_path, "endes")
endes_files <- dir_ls(endes_path, recurse = T, glob = "*.sav")
pattern <- paste(endes_surveys, collapse = "|")
endes_files <- endes_files[grepl(pattern, endes_files)]
surveys_raw <- map(endes_files, read_sav)
variables <- split(variables_dtfr$variable, variables_dtfr$survey)
surveys_select <- surveys_raw
for (survey_path in names(surveys_select)) {
message(path_ext_remove(survey_path))
names(surveys_select[[survey_path]]) <-
toupper(names(surveys_select[[survey_path]]))
survey_name <- path_ext_remove(path_file(survey_path))
if (!(survey_name %in% names(variables))) {
message(paste(survey_name, "is missing.\n"))
} else {
surveys_select[[survey_path]] <-
surveys_select[[survey_path]] %>%
select(all_of(variables[[survey_name]])) %>%
# as_factor() %>%
mutate(across(everything(), as.character)) %>%
mutate(across(everything(), ~ trimws(.x, which = "both")))
}
surveys_select[[survey_path]]$PATH <- survey_path
}
surveys <- list()
for (survey in endes_surveys) {
surveys[[survey]] <- list()
for (survey_year in names(surveys_select)) {
if (grepl(survey, survey_year)) {
surveys[[survey]][[survey_year]] <- surveys_select[[survey_year]]
}
}
}
surveys_bind <- list()
for (survey in names(surveys)) {
message(survey)
surveys_bind[[survey]] <-
bind_rows(surveys[[survey]]) %>%
mutate(
YEAR = substr(PATH, 16, 19),
MODULE = path_file(path_dir(PATH)),
SURVEY = path_ext_remove(path_file(PATH))
)
}
surveys_select[[survey_path]]$PATH <- survey_path
}
surveys_select[[survey_path]]$PATH <- survey_path
}
variables <- split(variables_dtfr$variable, variables_dtfr$survey)
surveys_select <- surveys_raw
for (survey_path in names(surveys_select)) {
message(path_ext_remove(survey_path))
names(surveys_select[[survey_path]]) <-
toupper(names(surveys_select[[survey_path]]))
survey_name <- path_ext_remove(path_file(survey_path))
if (!(survey_name %in% names(variables))) {
message(paste(survey_name, "is missing.\n"))
} else {
surveys_select[[survey_path]] <-
surveys_select[[survey_path]] %>%
select(all_of(variables[[survey_name]])) %>%
# as_factor() %>%
mutate(across(everything(), as.character)) %>%
mutate(across(everything(), ~ trimws(.x, which = "both")))
}
surveys_select[[survey_path]]$PATH <- survey_path
}
surveys_select
surveys <- list()
for (survey in endes_surveys) {
surveys[[survey]] <- list()
for (survey_year in names(surveys_select)) {
if (grepl(survey, survey_year)) {
surveys[[survey]][[survey_year]] <- surveys_select[[survey_year]]
}
}
}
surveys_bind <- list()
for (survey in names(surveys)) {
message(survey)
surveys_bind[[survey]] <-
bind_rows(surveys[[survey]]) %>%
mutate(
YEAR = substr(PATH, 16, 19),
MODULE = path_file(path_dir(PATH)),
SURVEY = path_ext_remove(path_file(PATH))
)
}
surveys_select[[survey_path]]$PATH <- survey_path
}
surveys <- list()
for (survey in endes_surveys) {
surveys[[survey]] <- list()
for (survey_year in names(surveys_select)) {
if (grepl(survey, survey_year)) {
surveys[[survey]][[survey_year]] <- surveys_select[[survey_year]]
}
}
}
surveys_bind <- list()
for (survey in names(surveys)) {
message(survey)
surveys_bind[[survey]] <-
bind_rows(surveys[[survey]]) %>%
mutate(
YEAR = substr(PATH, 16, 19),
MODULE = path_file(path_dir(PATH)),
SURVEY = path_ext_remove(path_file(PATH))
)
}
variables <- split(variables_dtfr$variable, variables_dtfr$survey)
surveys_select <- surveys_raw
for (survey_path in names(surveys_select)) {
message(path_ext_remove(survey_path))
names(surveys_select[[survey_path]]) <-
toupper(names(surveys_select[[survey_path]]))
survey_name <- path_ext_remove(path_file(survey_path))
if (!(survey_name %in% names(variables))) {
message(paste(survey_name, "is missing.\n"))
} else {
surveys_select[[survey_path]] <-
surveys_select[[survey_path]] %>%
select(all_of(variables[[survey_name]])) %>%
# as_factor() %>%
mutate(across(everything(), as.character)) %>%
mutate(across(everything(), ~ trimws(.x, which = "both")))
}
surveys_select[[survey_path]]$PATH <- survey_path
}
surveys <- list()
for (survey in endes_surveys) {
surveys[[survey]] <- list()
for (survey_year in names(surveys_select)) {
if (grepl(survey, survey_year)) {
surveys[[survey]][[survey_year]] <- surveys_select[[survey_year]]
}
}
}
surveys_bind <- list()
for (survey in names(surveys)) {
message(survey)
surveys_bind[[survey]] <-
bind_rows(surveys[[survey]]) %>%
mutate(
YEAR = substr(PATH, 16, 19),
MODULE = path_file(path_dir(PATH)),
SURVEY = path_ext_remove(path_file(PATH))
)
}
library(fs)
library(haven)
library(purrr)
library(dplyr)
library(data.table)
library(readr)
library(stringi)
library(tidyr)
variables_path <- path("data", "variables")
variables_file <- "variables.csv"
variables_file_path <- path(variables_path, variables_file)
variables_dtfr <- read_csv(variables_file_path)
endes_surveys <- unique(variables_dtfr$survey)
raw_path <- path("data", "raw")
endes_path <- path(raw_path, "endes")
endes_files <- dir_ls(endes_path, recurse = T, glob = "*.sav")
pattern <- paste(endes_surveys, collapse = "|")
endes_files <- endes_files[grepl(pattern, endes_files)]
surveys_raw <- map(endes_files, read_sav)
variables <- split(variables_dtfr$variable, variables_dtfr$survey)
surveys_select <- surveys_raw
for (survey_path in names(surveys_select)) {
message(path_ext_remove(survey_path))
names(surveys_select[[survey_path]]) <-
toupper(names(surveys_select[[survey_path]]))
survey_name <- path_ext_remove(path_file(survey_path))
if (!(survey_name %in% names(variables))) {
message(paste(survey_name, "is missing.\n"))
} else {
surveys_select[[survey_path]] <-
surveys_select[[survey_path]] %>%
select(all_of(variables[[survey_name]])) %>%
# as_factor() %>%
mutate(across(everything(), as.character)) %>%
mutate(across(everything(), ~ trimws(.x, which = "both")))
}
surveys_select[[survey_path]]$PATH <- survey_path
}
surveys <- list()
for (survey in endes_surveys) {
surveys[[survey]] <- list()
for (survey_year in names(surveys_select)) {
if (grepl(survey, survey_year)) {
surveys[[survey]][[survey_year]] <- surveys_select[[survey_year]]
}
}
}
surveys_bind <- list()
for (survey in names(surveys)) {
message(survey)
surveys_bind[[survey]] <-
bind_rows(surveys[[survey]]) %>%
mutate(
YEAR = substr(PATH, 16, 19),
MODULE = path_file(path_dir(PATH)),
SURVEY = path_ext_remove(path_file(PATH))
)
}
surveys_bind$CSALUD01 <-
surveys_bind$CSALUD01 %>%
mutate(
CASEID = ifelse(
nchar(QSNUMERO) == 1,
paste0(HHID, "  ", QSNUMERO),
paste0(HHID, " ", QSNUMERO)
)
)
surveys_bind$RECH1 <-
surveys_bind$RECH1 %>%
mutate(
CASEID = ifelse(
nchar(HVIDX) == 1,
paste0(HHID, "  ", HVIDX),
paste0(HHID, " ", HVIDX)
)
)
surveys_bind$PROGRAMAS_SOCIALES <-
surveys_bind$PROGRAMAS_SOCIALES %>%
mutate(
CASEID = ifelse(
nchar(QH96) == 1,
paste0(HHID, "  ", QH96),
paste0(HHID, " ", QH96)
)
)
surveys_bind$PSH <-
surveys_bind$PSH %>%
mutate(
CASEID = ifelse(
nchar(QH96) == 1,
paste0(HHID, "  ", QH96),
paste0(HHID, " ", QH96)
)
)
full_dataset <-
surveys_bind %>%
reduce(left_join, by = c("CASEID", "YEAR"))
dataset_raw <-
full_dataset %>%
select(
!starts_with(c("PATH", "MODULE", "SURVEY", "HHID", "HVIDX", "QSNUMERO", "QH96"))
)
vars_na_percent <- apply(
dataset_raw, 2, function(x) sum(is.na(x)) / nrow(dataset_raw)
)
null_vars <- names(which(vars_na_percent == 1))
dataset_select <- select(dataset_raw, !any_of(null_vars))
dataset_select <- select(dataset_select, CASEID, YEAR, everything())
variable_names_file <- "variable-names.csv"
variable_names_file_path <- path(variables_path, variable_names_file)
variable_names <- read_csv(variable_names_file_path)
ariables_to_select <- setdiff(names(dataset_select), c("CASEID", "YEAR"))
variables_to_fill <- setdiff(variables_to_select, variable_names$variable)
variables_to_select <- setdiff(names(dataset_select), c("CASEID", "YEAR"))
variables_to_fill <- setdiff(variables_to_select, variable_names$variable)
variables_to_export <- filter(variables_dtfr, variable %in% variables_to_fill)
variables_to_export$variable_name <- rep(NA, nrow(variables_to_export))
variables_out_path <- path("data", "variables", "raw")
variables_out_file_name <- "variable-names-to-fill.csv"
variables_out_file_path <- path(variables_out_path, variables_out_file_name)
write_csv(variables_to_export, variables_out_file_path, na = "")
data_out_path <- path("data", "interim")
data_out_file_name <- "dataset-without-names.csv"
data_out_file_path <- path(data_out_path, data_out_file_name)
write_csv(dataset_select, data_out_file_path, na = "")
library(fs)
library(readr)
library(dplyr)
library(tidyr)
path_variables_dir <- path("data", "variables")
variable_names_file <- "variable-names.csv"
path_variable_names_file <- path(path_variables_dir, variable_names_file)
variable_names <- read_csv(path_variable_names_file)
path_interim_data_dir <- path("data", "interim")
dataset_wo_names_file <- "dataset-without-names.csv"
path_dataset_wo_names_file <- path(path_interim_data_dir, dataset_wo_names_file)
dataset_wo_names <- read_csv(
path_dataset_wo_names_file, col_types = cols(.default = "c")
)
nrow_variable_names <- nrow(variable_names)
dataset <- dataset_wo_names
for (row in 1:nrow_variable_names) {
variable_name <- variable_names$variable[row]
new_variable_name <- variable_names$variable_name[row]
colnames(dataset)[colnames(dataset) == variable_name] <- new_variable_name
}
colnames(dataset) <- tolower(colnames(dataset))
variables_to_filter_for_pivot <- c(
"caseid", "wealth_index_scoring_factor", "weighting_factor", "year",
"total_children_ever_born", "sons_who_have_died", "daughters_who_have_died",
"births_last_five_years", "births_past_year", "births_month_interview",
"date_first_birth", "age_respondent_first_birth", "duration_current_pregnancy",
"no_living_children", "living_children_current_pregnancy",
"marriage_fisrt_birth_interval", "last_birth_interview_interval", "age",
"no_household_members", "no_children_6_yo",
"no_eligible_women_15_to_49_yo", "age_household_head", "age_household_member",
"mother_line_no", "father_line_no", "single_years_edu_partner",
"no_sex_partners_other_partner_last_12_months",
"no_sex_partners_including_partner_last_12_months",
"years_lived_place_residence", "age_first_sexual_partner",
"total_lifetime_sex_partners_last_12_months", "highest_year_edu_woman",
"time_get_primary_source_drinking_water", "highest_year_edu",
"edu_single_years", "grade_edu_current_year",
"edu_single_years_current_year", "grade_edu_previous_year",
"edu_single_years_previous_year", "length_time_knows_last_partner",
"conglomerate_ps", "age_last_sexual_partner", "conglomerate", "stratum",
"months_pregnancy_first_control", "months_pregnancy_last_prenatal_checkup",
"months_pregnancy_syphilis_testing", "months_pregnancy_hiv_testing",
"province"
)
dataset %>%
select(-all_of(variables_to_filter_for_pivot)) %>%
pivot_longer(
cols = everything(),
names_to = "variable_name",
values_to = "value"
) %>%
group_by(variable_name) %>%
summarise(value = sort(unique(value)), .groups = "drop") %>%
left_join(variable_names, by = "variable_name") %>%
select(survey, variable, variable_name, value) %>%
arrange(survey, variable, value) ->
values_per_variable
variable_values_file <- "variable-values.csv"
path_variable_values_file <- path(path_variables_dir, variable_values_file)
variable_values <- read_csv(
path_variable_values_file, col_types = cols(.default = "c")
)
values_per_variable %>%
anti_join(
variable_values, by = c("survey", "variable", "variable_name", "value")
) ->
variable_values_to_fill
variable_values_to_fill$value_description <- rep(NA, nrow(variable_values_to_fill))
variables_out_path <- path("data", "variables", "raw")
output_file_name <- "variable-values-to-fill.csv"
output_file_path <- path(variables_out_path, output_file_name)
write_csv(variable_values_to_fill, output_file_path, na = "")
data_out_path <- path("data", "interim")
data_out_file_name <- "dataset-without-values.csv"
data_out_file_path <- path(data_out_path, data_out_file_name)
write_csv(dataset, data_out_file_path, na = "")
library(fs)
library(readr)
library(dplyr)
library(tidyr)
path_variables_dir <- path("data", "variables")
variable_values_file <- "variable-values.csv"
path_variable_values_file <- path(path_variables_dir, variable_values_file)
variable_values <- read_csv(path_variable_values_file)
path_interim_data_dir <- path("data", "interim")
dataset_wo_values_file <- "dataset-without-values.csv"
path_dataset_wo_values_file <- path(path_interim_data_dir, dataset_wo_values_file)
dataset_wo_values <- read_csv(
path_dataset_wo_values_file, col_types = cols(.default = "c")
)
dataset <- dataset_wo_values
for (row in 1:nrow(variable_values)) {
variable_name <- variable_values$variable_name[row]
value <- as.character(variable_values$value[row])
value_description <- variable_values$value_description[row]
for (row in 1:nrow(variable_values)) {
variable_name <- variable_values$variable_name[row]
value <- as.character(variable_values$value[row])
value_description <- variable_values$value_description[row]
dataset[variable_name][dataset[variable_name] == value] <- value_description
}
library(fs)
library(readr)
library(dplyr)
library(tidyr)
path_variables_dir <- path("data", "variables")
variable_values_file <- "variable-values.csv"
path_variable_values_file <- path(path_variables_dir, variable_values_file)
variable_values <- read_csv(path_variable_values_file)
path_interim_data_dir <- path("data", "interim")
dataset_wo_values_file <- "dataset-without-values.csv"
path_dataset_wo_values_file <- path(path_interim_data_dir, dataset_wo_values_file)
dataset_wo_values <- read_csv(
path_dataset_wo_values_file, col_types = cols(.default = "c")
)
values_per_variable
values_per_variable
dataset <- dataset_wo_values
for (row in 1:nrow(variable_values)) {
variable_name <- variable_values$variable_name[row]
value <- as.character(variable_values$value[row])
value_description <- variable_values$value_description[row]
dataset[variable_name][dataset[variable_name] == value] <- value_description
}
data_out_path <- path("data", "processed")
data_out_file_name <- "dataset.csv"
data_out_file_path <- path(data_out_path, data_out_file_name)
write_csv(dataset, data_out_file_path, na = "")
git status
$git status
view(dataset.csv)
view(dataset)
library(readxl)
dataset <- read_excel("data/processed/dataset.csv")
View(dataset)
library(readxl)
dataset <- read.table("data/processed/dataset.csv")
dataset <- read.table("dataset.csv")
dataset <- read.csv("dataset.csv")
Violencia durante la gestación:
proporción (general y en el tiempo por año) <- las que sí sufrieron / las que no
library(readxl)
dataset <- read.csv("dataset.csv")
getwd()
